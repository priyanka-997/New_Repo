<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="11" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-26T14:55:23 IST" name="Suite" finished-at="2023-05-26T14:55:32 IST" duration-ms="9592">
    <groups>
    </groups>
    <test started-at="2023-05-26T14:55:23 IST" name="Test" finished-at="2023-05-26T14:55:32 IST" duration-ms="9592">
      <class name="api.test.PincodeServiceableTests">
        <test-method signature="pincodeServiceable()[pri:4, instance:api.test.PincodeServiceableTests@957e06]" started-at="2023-05-26T14:55:27 IST" name="pincodeServiceable" finished-at="2023-05-26T14:55:27 IST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pincodeServiceable -->
      </class> <!-- api.test.PincodeServiceableTests -->
      <class name="api.test.GetAddressTests">
        <test-method signature="testGetAddress()[pri:8, instance:api.test.GetAddressTests@21282ed8]" started-at="2023-05-26T14:55:30 IST" name="testGetAddress" finished-at="2023-05-26T14:55:30 IST" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAddress -->
      </class> <!-- api.test.GetAddressTests -->
      <class name="api.test.ApplyCouponTests">
        <test-method signature="testApplyCoupon()[pri:13, instance:api.test.ApplyCouponTests@550dbc7a]" started-at="2023-05-26T14:55:29 IST" name="testApplyCoupon" finished-at="2023-05-26T14:55:30 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyCoupon -->
        <test-method signature="testRevokeCoupon()[pri:14, instance:api.test.ApplyCouponTests@550dbc7a]" started-at="2023-05-26T14:55:30 IST" name="testRevokeCoupon" finished-at="2023-05-26T14:55:30 IST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRevokeCoupon -->
      </class> <!-- api.test.ApplyCouponTests -->
      <class name="api.test.OrderAvailableTimeslotsTests">
        <test-method signature="testOrderAvaialbleTimeslots()[pri:12, instance:api.test.OrderAvailableTimeslotsTests@66f57048]" started-at="2023-05-26T14:55:29 IST" name="testOrderAvaialbleTimeslots" finished-at="2023-05-26T14:55:29 IST" duration-ms="431" status="FAIL">
          <exception class="java.time.format.DateTimeParseException">
            <message>
              <![CDATA[Text '11-07-2023' could not be parsed at index 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.time.format.DateTimeParseException: Text '11-07-2023' could not be parsed at index 2
at java.base/java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:2052)
at java.base/java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1954)
at java.base/java.time.LocalDate.parse(LocalDate.java:430)
at api.test.OrderAvailableTimeslotsTests.testOrderAvaialbleTimeslots(OrderAvailableTimeslotsTests.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.time.format.DateTimeParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderAvaialbleTimeslots -->
      </class> <!-- api.test.OrderAvailableTimeslotsTests -->
      <class name="api.test.GetCommonQuoteTests">
        <test-method signature="testGetCommonQuotes()[pri:7, instance:api.test.GetCommonQuoteTests@5a56cdac]" started-at="2023-05-26T14:55:23 IST" name="testGetCommonQuotes" finished-at="2023-05-26T14:55:27 IST" duration-ms="3797" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Success] but found [Invalid or missing parameters]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Success] but found [Invalid or missing parameters]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at api.test.GetCommonQuoteTests.testGetCommonQuotes(GetCommonQuoteTests.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommonQuotes -->
      </class> <!-- api.test.GetCommonQuoteTests -->
      <class name="api.test.ApplicablePaymentMethodsTests">
        <test-method signature="testApplicablePaymentMethods()[pri:10, instance:api.test.ApplicablePaymentMethodsTests@2c1b194a]" started-at="2023-05-26T14:55:28 IST" name="testApplicablePaymentMethods" finished-at="2023-05-26T14:55:29 IST" duration-ms="302" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Success] but found [Invalid or missing parameters]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Success] but found [Invalid or missing parameters]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at api.test.ApplicablePaymentMethodsTests.testApplicablePaymentMethods(ApplicablePaymentMethodsTests.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplicablePaymentMethods -->
      </class> <!-- api.test.ApplicablePaymentMethodsTests -->
      <class name="api.test.LoginTests">
        <test-method signature="testLogin()[pri:1, instance:api.test.LoginTests@32502377]" started-at="2023-05-26T14:55:27 IST" name="testLogin" finished-at="2023-05-26T14:55:28 IST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testResendOtp()[pri:2, instance:api.test.LoginTests@32502377]" started-at="2023-05-26T14:55:28 IST" name="testResendOtp" finished-at="2023-05-26T14:55:28 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResendOtp -->
        <test-method signature="testVerifyOtp()[pri:3, instance:api.test.LoginTests@32502377]" started-at="2023-05-26T14:55:28 IST" name="testVerifyOtp" finished-at="2023-05-26T14:55:28 IST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyOtp -->
      </class> <!-- api.test.LoginTests -->
      <class name="api.test.DetectDeviceTests">
        <test-method signature="testDetectDevice()[pri:5, instance:api.test.DetectDeviceTests@36916eb0]" started-at="2023-05-26T14:55:30 IST" name="testDetectDevice" finished-at="2023-05-26T14:55:31 IST" duration-ms="929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDetectDevice -->
      </class> <!-- api.test.DetectDeviceTests -->
      <class name="api.test.VerifyIfscTests">
        <test-method signature="testVerifyIfsc()[pri:11, instance:api.test.VerifyIfscTests@7bab3f1a]" started-at="2023-05-26T14:55:31 IST" name="testVerifyIfsc" finished-at="2023-05-26T14:55:32 IST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyIfsc -->
      </class> <!-- api.test.VerifyIfscTests -->
      <class name="api.test.ListVariantsTests">
        <test-method signature="testListVariantQuestions()[pri:6, instance:api.test.ListVariantsTests@23c30a20]" started-at="2023-05-26T14:55:32 IST" name="testListVariantQuestions" finished-at="2023-05-26T14:55:32 IST" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListVariantQuestions -->
      </class> <!-- api.test.ListVariantsTests -->
      <class name="api.test.AddUpdateAddressTests">
        <test-method signature="testAddUpdateAddress()[pri:9, instance:api.test.AddUpdateAddressTests@437da279]" started-at="2023-05-26T14:55:32 IST" name="testAddUpdateAddress" finished-at="2023-05-26T14:55:32 IST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUpdateAddress -->
      </class> <!-- api.test.AddUpdateAddressTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
